name: CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Yarn globally
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: yarn test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: GitHubActions

      - name: Test AWS CLI
        run: |
          echo "Testing AWS CLI configuration..."
          aws sts get-caller-identity
          echo "AWS CLI is configured correctly!"

      - name: Create deployment package
        run: |
          echo "Creating deployment package..."
          zip -r deploy-${{ github.sha }}.zip \
            *.js \
            package.json \
            yarn.lock \
            ecosystem.config.js \
            appspec.yml \
            scripts/ \
            -x "*.test.js" "coverage/*" "node_modules/*" ".git/*"
          echo "Deployment package created: deploy-${{ github.sha }}.zip"

      - name: Upload to S3
        run: |
          echo "Uploading to S3..."
          aws s3 cp deploy-${{ github.sha }}.zip s3://${{ secrets.AWS_S3_BUCKET }}/3tier-back/deploy-${{ github.sha }}.zip
          echo "Upload completed"

      - name: Trigger CodeDeploy
        run: |
          echo "Triggering CodeDeploy deployment..."
          deployment_id=$(aws deploy create-deployment \
            --application-name ${{ secrets.CODEDEPLOY_APPLICATION }} \
            --deployment-group-name ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP }} \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},key=3tier-back/deploy-${{ github.sha }}.zip,bundleType=zip \
            --description "Deployment from GitHub Actions - commit ${{ github.sha }}" \
            --query 'deploymentId' \
            --output text)

          echo "Deployment ID: $deployment_id"
          echo "DEPLOYMENT_ID=$deployment_id" >> $GITHUB_ENV

      - name: Check deployment status
        run: |
          echo "Checking deployment status..."
          aws deploy get-deployment --deployment-id ${{ env.DEPLOYMENT_ID }}
